package exo;

import java.io.BufferedWriter;
import java.io.OutputStreamWriter;
import java.net.ServerSocket;
import java.net.Socket;
import java.util.Date;

public class Server {
	static class ServerThread implements Runnable {
		Socket client = null ; 

		public ServerThread(Socket c) {
			this.client = c;
		}
		public void run() {
			try {
				System.out.println("Connected to client : "+client.getInetAddress().getHostName());
				client.close();
			} catch (Exception e) {
				System.err.println(e.getMessage());
			}
		}
	}
	
	public static void main(String args[]) {
        try {
            ServerSocket server = new ServerSocket(Integer.parseInt(args[0]));
            while (true) {
                Socket connectionSocket = server.accept();
				BufferedWriter buffout = new BufferedWriter(new OutputStreamWriter(connectionSocket.getOutputStream()));

                while (true){
					buffout.write(new Date().toString());
					buffout.newLine();
					//on va essayer de flusher dans le client et si ça ne marche pas on break pour sortir de cette boucle while et on passe à l'autre 
					try{
						buffout.flush();
						Thread.sleep(Integer.parseInt(args[1]));
					}catch (java.net.SocketException e){
						break ; 
					}
				}
                new Thread(new ServerThread(connectionSocket)).start();
            }
        } catch (Exception ex) {
            System.err.println("Error : " + ex.getMessage());
        }
    }
}







